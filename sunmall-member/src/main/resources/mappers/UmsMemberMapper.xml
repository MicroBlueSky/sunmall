<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sun.sunmall.mapper.UmsMemberMapper">
    <resultMap id="BaseResultMap" type="com.sun.sunmall.bean.UmsMember">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="member_level_id" jdbcType="BIGINT" property="memberLevelId" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="nickname" jdbcType="VARCHAR" property="nickname" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="icon" jdbcType="VARCHAR" property="icon" />
        <result column="gender" jdbcType="INTEGER" property="gender" />
        <result column="birthday" jdbcType="DATE" property="birthday" />
        <result column="city" jdbcType="VARCHAR" property="city" />
        <result column="job" jdbcType="VARCHAR" property="job" />
        <result column="personalized_signature" jdbcType="VARCHAR" property="personalizedSignature" />
        <result column="source_type" jdbcType="INTEGER" property="sourceType" />
        <result column="integration" jdbcType="INTEGER" property="integration" />
        <result column="growth" jdbcType="INTEGER" property="growth" />
        <result column="luckey_count" jdbcType="INTEGER" property="luckeyCount" />
        <result column="history_integration" jdbcType="INTEGER" property="historyIntegration" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, member_level_id, username, password, nickname, phone, status, create_time, icon,
    gender, birthday, city, job, personalized_signature, source_type, integration, growth,
    luckey_count, history_integration
  </sql>
    <select id="selectByExample" parameterType="com.sun.sunmall.bean.UmsMemberExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from ums_member
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <insert id="insert" parameterType="com.sun.sunmall.bean.UmsMember">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into ums_member (member_level_id, username, password,
        nickname, phone, status,
        create_time, icon, gender,
        birthday, city, job, personalized_signature,
        source_type, integration, growth,
        luckey_count, history_integration)
        values (#{memberLevelId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{nickname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
        #{createTime,jdbcType=TIMESTAMP}, #{icon,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER},
        #{birthday,jdbcType=DATE}, #{city,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, #{personalizedSignature,jdbcType=VARCHAR},
        #{sourceType,jdbcType=INTEGER}, #{integration,jdbcType=INTEGER}, #{growth,jdbcType=INTEGER},
        #{luckeyCount,jdbcType=INTEGER}, #{historyIntegration,jdbcType=INTEGER})
    </insert>

    <resultMap id="PortalMemberInfoMap" type="com.sun.sunmall.bean.domain.PortalMemberInfo"
               extends="com.sun.sunmall.mapper.UmsMemberMapper.BaseResultMap">
        <association property="umsMemberLevel" resultMap="com.sun.sunmall.mapper.UmsMemberLevelMapper.BaseResultMap" columnPrefix="lv_">
        </association>
    </resultMap>
    <select id="getMemberInfo" resultMap="PortalMemberInfoMap">
        SELECT
            um.id,
            um.member_level_id,
            um.username,
            um.nickname,
            um.phone,
            um.status,
            um.create_time,
            um.icon,
            um.gender,
            um.birthday,
            um.city,
            um.job,
            um.personalized_signature,
            um.source_type,
            um.integration,
            um.growth,
            um.luckey_count,
            um.history_integration,
            lv.id lv_id,
            lv.name lv_name,
            lv.growth_point lv_growth_point,
            lv.default_status lv_default_status,
            lv.free_freight_point lv_free_freight_point,
            lv.comment_growth_point lv_comment_growth_point,
            lv.priviledge_free_freight lv_priviledge_free_freight,
            lv.priviledge_sign_in lv_priviledge_sign_in,
            lv.priviledge_comment lv_priviledge_comment,
            lv.priviledge_promotion lv_priviledge_promotion,
            lv.priviledge_member_price lv_priviledge_member_price,
            lv.priviledge_birthday lv_priviledge_birthday
        FROM
            tl_mall_user.ums_member um
        LEFT JOIN
            tl_mall_user.ums_member_level lv on lv.id = um.member_level_id
        WHERE um.id = #{memberId} AND um.status = 1
    </select>
</mapper>